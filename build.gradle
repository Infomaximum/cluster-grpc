buildscript {
    ext {
        protobufVersion = '0.8.19'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath group: 'com.google.protobuf', name: 'protobuf-gradle-plugin', version: "${protobufVersion}"
    }
}

plugins {
    id 'java'
    id 'maven-publish'
    id 'signing'
    id 'com.google.protobuf' version '0.8.18'
    id ("de.jjohannes.extra-java-module-info") version "0.15"
    id "org.checkerframework" version "0.6.15" //https://github.com/kelloggm/checkerframework-gradle-plugin
}
apply from: 'build-java-module-info.gradle'
apply from: 'https://raw.githubusercontent.com/Infomaximum/platform-java-module-info/0.0.2/com.infomaximum.platform-java-module-info.gradle'
if (project.hasProperty('ossrhUsername')) {
    apply from: 'publish.gradle'
}

group 'com.infomaximum'
version '0.1.0f1'

ext.moduleName = 'com.infomaximum.cluster-grpc'

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(17))
    }
}

compileJava {
    doFirst {
        options.compilerArgs = [
                '--module-path', classpath.asPath
        ]
        classpath = files()
    }
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.21.4'
    }
    plugins {
        grpc { artifact = "io.grpc:protoc-gen-grpc-java:1.48.1" }
    }
    generateProtoTasks {
        all()*.plugins { grpc {} }
    }
}

sourceSets {
    main {
        java {
            srcDirs 'src/main/java'
            srcDirs 'build/generated/source/proto/main/java'
            srcDirs 'build/generated/source/proto/main/grpc'
            proto {
                srcDir 'src/main/protobuf'
            }
        }
        resources.srcDir 'src/main/resources'
    }
    test {
        java.srcDir 'src/test/java'
        resources.srcDir 'src/test/resources'
    }
    test_integration {
        java {
            srcDirs 'src/test_integration/java'
            srcDirs 'build/generated/source/proto/main/java'
            srcDirs 'build/generated/source/proto/main/grpc'
        }
        resources.srcDir 'src/test_integration/resources'
        compileClasspath += sourceSets.main.output + sourceSets.test.output
        runtimeClasspath += sourceSets.main.output + sourceSets.test.output
    }
}

configurations {
    test_integrationImplementation.extendsFrom(testImplementation)
    test_integrationRuntimeOnly.extendsFrom(testRuntimeOnly)
}

repositories {
    mavenCentral()
    maven { url "https://maven.office.infomaximum.com/repository/maven-releases/" }
}

dependencies {

    implementation 'com.infomaximum:cluster:1.1.4f1'
//    implementation project(':cluster')

    implementation ('io.grpc:grpc-netty-shaded:1.48.1')
    implementation 'io.grpc:grpc-protobuf:1.48.1'
    implementation 'io.grpc:grpc-stub:1.48.1'

    //В java 11 был удален пакет: https://blogs.perficient.com/2019/05/15/the-java-commons-annotations-was-removed-in-jdk-11/
    implementation 'javax.annotation:javax.annotation-api:1.3.2'

    implementation 'org.slf4j:slf4j-api:1.7.30'

    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.9.0'
    testImplementation 'ch.qos.logback:logback-core:1.2.3'
    testImplementation 'ch.qos.logback:logback-classic:1.2.3'
}

configurations.implementation {
    //Из-за конфликтов пакета javax.annotation в javax.annotation-api и com.google.code.findbugs.jsr305 - вырезаем пакет
    exclude(group: "com.google.code.findbugs", module: "jsr305")
}

task test_integration(type: Test, description: 'Integration test', group: 'Verification') {}

tasks.withType(Copy).all { duplicatesStrategy 'exclude' }