buildscript {
    ext {
        protobufVersion = '0.8.19'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath group: 'com.google.protobuf', name: 'protobuf-gradle-plugin', version: "${protobufVersion}"
    }
}

plugins {
    id 'java'
    id 'maven-publish'
    id 'signing'
    id 'com.google.protobuf' version '0.8.18'
    id 'org.gradlex.extra-java-module-info' version '1.0'
    id 'org.checkerframework' version '0.6.15' //https://github.com/kelloggm/checkerframework-gradle-plugin
}
apply from: 'build-java-module-info.gradle'
if (project.hasProperty('ossrhUsername')) {
    apply from: 'publish.gradle'
}

group 'com.infomaximum'
version '0.1.5p1'

ext.moduleName = 'com.infomaximum.cluster.grpc'

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(17))
    }
}

compileJava {
    doFirst {
        options.compilerArgs = [
                '--module-path', classpath.asPath
        ]
        classpath = files()
    }
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.21.12'
    }
    plugins {
        grpc { artifact = "io.grpc:protoc-gen-grpc-java:1.50.3" }
    }
    generateProtoTasks {
        all()*.plugins { grpc {} }
    }
}

sourceSets {
    main {
        java {
            srcDirs 'src/main/java'
            srcDirs 'build/generated/source/proto/main/java'
            srcDirs 'build/generated/source/proto/main/grpc'
        }
        resources.srcDir 'src/main/resources'
        proto {
            srcDir 'src/main/java/proto'
        }
    }
    test {
        java.srcDir 'src/test/java'
        resources.srcDir 'src/test/resources'
        compileClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.main.output
    }
    test_integration {
        java {
            srcDirs 'src/test_integration/java'
            srcDirs 'build/generated/source/proto/main/java'
            srcDirs 'build/generated/source/proto/main/grpc'
        }
        resources.srcDir 'src/test_integration/resources'
        compileClasspath += sourceSets.main.output + sourceSets.test.output
        runtimeClasspath += sourceSets.main.output + sourceSets.test.output
    }
}

configurations {
    testImplementation.extendsFrom (implementation, compileOnly)
    testRuntimeOnly.extendsFrom runtimeOnly
    test_integrationImplementation.extendsFrom(testImplementation)
    test_integrationRuntimeOnly.extendsFrom(testRuntimeOnly)
}

repositories {
    mavenCentral()
}

jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from {
        configurations.runtimeClasspath.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    } {
        exclude "META-INF/maven/**", "META-INF/versions/**", "module-info.class"
    }
    from("jar/module-info.class")
    exclude { FileTreeElement el ->
        return el.file.toPath().toString().endsWith("/main/module-info.class")
    }
}

dependencies {

    compileOnly 'com.infomaximum:cluster:1.1.10'
//    compileOnly project(':cluster')

    implementation('io.grpc:grpc-netty-shaded:1.50.3'){
        exclude group: 'io.grpc', module: 'grpc-core'
        exclude group: 'com.google.errorprone', module: 'error_prone_annotations'
        exclude group: 'com.google.guava', module: 'guava'
    }
    implementation('io.grpc:grpc-core:1.50.3'){
        exclude group: 'io.grpc', module: 'grpc-api'
        exclude group: 'com.google.guava', module: 'guava'
        exclude group: 'com.google.errorprone', module: 'error_prone_annotations'
    }
    implementation('io.grpc:grpc-api:1.50.3'){
        exclude group: 'com.google.guava', module: 'guava'
        exclude group: 'com.google.code.findbugs', module: 'jsr305'
        exclude group: 'com.google.errorprone', module: 'error_prone_annotations'
    }
    implementation ('io.grpc:grpc-protobuf:1.50.3'){
        exclude group: 'io.grpc', module: 'grpc-api'
        exclude group: 'io.grpc', module: 'grpc-protobuf-lite'
        exclude group: 'com.google.guava', module: 'guava'
        exclude group: 'com.google.code.findbugs', module: 'jsr305'
        exclude group: 'com.google.errorprone', module: 'error_prone_annotations'
    }
    implementation('io.grpc:grpc-stub:1.50.3') {
        exclude group: 'io.grpc', module: 'grpc-api'
        exclude group: 'com.google.guava', module: 'guava'
        exclude group: 'com.google.errorprone', module: 'error_prone_annotations'
    }
    implementation('io.grpc:grpc-protobuf-lite:1.50.2') {
        exclude group: 'io.grpc', module: 'grpc-api'
        exclude group: 'com.google.protobuf', module: 'protobuf-javalite'
        exclude group: 'com.google.guava', module: 'guava'
        exclude group: 'com.google.code.findbugs', module: 'jsr305'
    }
    compileOnly('com.google.guava:guava:32.1.3-jre') {
        exclude group: 'com.google.j2objc', module: 'j2objc-annotations'
        exclude group: 'com.google.code.findbugs', module: 'jsr305'
        exclude group: 'com.google.errorprone', module: 'error_prone_annotations'
    }
    implementation 'io.projectreactor.tools:blockhound:1.0.6.RELEASE'

    //В java 11 был удален пакет: https://blogs.perficient.com/2019/05/15/the-java-commons-annotations-was-removed-in-jdk-11/
    compileOnly 'javax.annotation:javax.annotation-api:1.3.2'

    compileOnly 'org.slf4j:slf4j-api:2.0.12'

    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.9.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.9.2'
    testImplementation 'org.assertj:assertj-core:3.13.2'
    testImplementation 'org.mockito:mockito-core:5.7.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.7.0'
    testImplementation 'ch.qos.logback:logback-core:1.4.7'
    testImplementation ('ch.qos.logback:logback-classic:1.4.7') {
        exclude group: 'com.sun.mail', module: 'javax.mail'
    }
}

task test_integration(type: Test, description: 'Integration test', group: 'Verification') {}

tasks.withType(Copy).all { duplicatesStrategy 'EXCLUDE' }

tasks.withType(GenerateModuleMetadata) {
    enabled = false
}